---
import { SEO } from "astro-seo";

import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";

import CookieConsentPopup from "../components/react/CookieConsence.jsx";
import MatomoTracker from "../components/MatomoTracker.astro";

import "../styles/global.css";

const { title, description, thumbnail = "null", isTop = "false", noindex = "false", noAi = false, translationUrl, translationLang, lang } = Astro.props;

let thumbnailUrl
if ( thumbnail === "null" ) {
	thumbnailUrl = `https://ogp.amase.cc/ogp.jpg?theme=techlike&title=${title}&author=AmaseCocoa&avatar_hash=158677e7465cd96ab9c9a52e2faf7a1f66e045bebea4c9b1894b2396eac8ace7`
} else {
	thumbnailUrl = thumbnail
}

let ogType
if ( isTop === "true" ) {
	ogType = "website"
} else {
	ogType = "article"
}

let noIndex
if ( noindex === "true" ) {
	noIndex = true
} else {
	noIndex = false
}

let absoluteTranslationURL;
if (translationUrl) {
  absoluteTranslationURL = new URL(translationUrl, Astro.url.origin);
}

let xDefaultUrl;
let engUrl;
if (lang === 'ja') {
    xDefaultUrl = Astro.url.href;
    if (absoluteTranslationURL) {
      engUrl = absoluteTranslationURL.href;
    }
} else if (lang === 'en' && absoluteTranslationURL) {
    xDefaultUrl = absoluteTranslationURL.href;
    engUrl = Astro.url.href;
}

---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<SEO
			title=`${title} - FoxTail`
			description={description}
			noindex={noIndex}
			openGraph={{
				basic: {
					title: title,
					type: ogType,
					image: thumbnailUrl,
				},
				optional: {
					siteName: "FoxTail"
				}
			}}
			twitter={{
				creator: "@AmaseCocoa_VRC",
			}}
			extend={{
				link: [{ rel: "icon", href: "/favicon.ico" }],
				meta: [
					{
						name: "twitter:image",
						content: thumbnailUrl,
					},
					{
						name: "twitter:title",
						content: title,
					},
					{ name: "twitter:description", content: description },
				],
			}}
		/>
		{() => {
			if (noAi) {
				return (
					<meta name="robots" content="noimageai">
					<meta name="robots" content="noai">
				)
			}
		}}
		<link rel="alternate" type="application/rss+xml" title="RSS" href={new URL("/rss.xml", Astro.url.origin).href} />
		<link rel="alternate" type="application/rss+xml" title="RSS (English)" href={new URL("/rss.en.xml", Astro.url.origin).href} />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="sitemap" href="/sitemap-index.xml" />
		{absoluteTranslationURL && translationLang && (
				<link rel="alternate" hreflang={translationLang} href={absoluteTranslationURL.href} />
			)}
		{engUrl && <link rel="alternate" hreflang="en" href={engUrl} />}
		{xDefaultUrl && <link rel="alternate" hreflang="x-default" href={xDefaultUrl} />}
		<MatomoTracker />
	</head>
	<body class="flex flex-col min-h-screen font-sans text-[#291F18]">
		<Header />
		<content class="flex-grow">
			<slot />
		</content>
		<CookieConsentPopup client:load />
		<Footer />
	</body>
</html>
